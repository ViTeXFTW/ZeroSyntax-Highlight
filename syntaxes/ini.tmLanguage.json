{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Ini",
	"patterns": [
		{
			"include": "#inline-comment"
		},
		{
			"include": "#object-class"
		},
		{
			"include": "#locomotor-class"
		}
	],
	"repository": {
		"locomotor-class": {
			"patterns": [
				{
					"begin": "\\b(Locomotor)\\s([a-zA-Z]\\w+)",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.ini"
						},
						"2": {
							"name": "entity.name.type.ini"
						}
					},
					"end": "\\s*\\b(End)\\b",
					"endCaptures": {
						"1": {
							"name": "keyword.control.ini"
						}
					},
					"patterns": [
						{
							"include": "#assignment"
						},
						{
							"include": "#inline-comment"
						}
					]
				}
			]
		},
		"object-class": {
			"patterns": [
				{
					"begin": "\\b(Object)\\s([a-zA-Z]\\w+)",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.ini"
						},
						"2": {
							"name": "entity.name.type.ini"
						}
					},
					"end": "\\s*\\b(End)\\b",
					"endCaptures": {
						"1": {
							"name": "keyword.control.ini"
						}
					},
					"patterns": [
						{
							"include": "#addmodule-block"
						},
						{
							"include": "#inline-removemodule"
						},
						{
							"include": "#assignment"
						},
						{
							"include": "#inline-comment"
						}
					]
				}
			]
		},
		"addmodule-block": {
			"begin": "\\s*\\b(AddModule)\\b",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"end": "\\s*\\b(End)\\b",
			"endCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#modules"
				},
				{
					"include": "#assignment"
				},
				{
					"include": "#inline-comment"
				}
			]
		},
		"inline-removemodule": {
			"match": "\\s*\\b(RemoveModule)\\b\\s*([a-zA-Z]\\w+)",
			"captures": {
				"1": {
					"name": "keyword.control.ini"
				},
				"2": {
					"name": "storage.type.ini"
				}
			},
			"patterns": [
				{
					"include": "#inline-comment"
				}
			]
		},
		"modules": {
			"patterns": [
				{
					"include": "#draw-block"
				},
				{
					"include": "#body-block"
				},
				{
					"include": "#behavior-block"
				}
			]
		},
		"behavior-block": {
			"begin": "\\s*\\b(Behavior)\\b\\s*(\\=)\\s*([a-zA-Z]\\w+)\\s*([a-zA-Z][\\w_]+)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.ini"
				},
				"2": {
					"name": "keyword.operator.assignment.ini"
				},
				"3": {
					"name": "entity.name.function"
				},
				"4": {
					"name": "storage.type.ini"
				}
			},
			"end": "\\s*\\b(End)\\b",
			"endCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#behavior-turret"
				},
				{
					"include": "#assignment"
				},
				{
					"include": "#inline-comment"
				}
			]
		},
		"behavior-turret": {
			"begin": "\\s*\\b(Turret)\\b",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"end": "\\s*\\b(End)\\b",
			"endCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#assignment"
				},
				{
					"include": "#inline-comment"
				}
			]
		},
		"body-block": {
			"begin": "\\s*\\b(Body)\\b\\s*(\\=)\\s*([a-zA-Z]\\w+)\\s*([a-zA-Z][\\w_]+)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.ini"
				},
				"2": {
					"name": "keyword.operator.assignment.ini"
				},
				"3": {
					"name": "entity.name.function"
				},
				"4": {
					"name": "storage.type.ini"
				}
			},
			"end": "\\s*\\b(End)\\b",
			"endCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#assignment"
				},
				{
					"include": "#inline-comment"
				}
			]
		},
		"draw-block": {
			"begin": "\\s*\\b(Draw)\\b\\s*(\\=)\\s*([a-zA-Z]\\w+)\\s*([a-zA-Z][\\w_]+)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.ini"
				},
				"2": {
					"name": "keyword.operator.assignment.ini"
				},
				"3": {
					"name": "entity.name.function"
				},
				"4": {
					"name": "storage.type.ini"
				}
			},
			"end": "\\s*\\b(End)\\b",
			"endCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#drawblock-defaultstate"
				},
				{
					"include": "#drawblock-conditionstate"
				},
				{
					"include": "#assignment"
				},
				{
					"include": "#inline-comment"
				}
			]
		},
		"drawblock-defaultstate": {
			"begin": "\\s*\\b(DefaultConditionState)\\b",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"end": "\\s*\\b(End)\\b",
			"endCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#assignment"
				},
				{
					"include": "#inline-comment"
				}
			]
		},
		"drawblock-conditionstate": {
			"begin": "\\s*\\b(ConditionState)\\b\\s*(\\=)\\s*(?=[a-zA-Z])",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.ini"
				},
				"2": {
					"name": "keyword.operator.assignment.ini"
				}
			},
			"end": "\\s*\\b(End)\\b",
			"endCaptures": {
				"1": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"match": "\\b(NONE|DAMAGED|REALLYDAMAGED|RUBBLE|DOOR_1_OPENING|DOOR_1_CLOSING)+",
					"name": "variable.other.constant.ini"
				},
				{
					"include": "#assignment"
				},
				{
					"include": "#inline-comment"
				}
			]
		},
		"assignment": {
			"begin": "(^[ \\t]+)?([a-zA-Z]\\w+)\\s*(\\=)\\s*",
			"beginCaptures": {
				"2": {
					"name": "variable.parameter"
				},
				"3": {
					"name": "keyword.operator.assignment.ini"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"include": "#locomotor-types"
				},
				{
					"include": "#boolean"
				},
				{
					"include": "#string"
				},
				{
					"include": "#doublequoted-strings"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#inline-comment"
				}
			]
		},
		"locomotor-types": {
			"match": "\\s*\\b(SET_NORMAL|SET_WANDER|SET_PANIC)\\s*([a-zA-Z]\\w+)",
			"captures": {
				"1": {
					"name": "variable.other.constant.ini"
				},
				"2": {
					"name": "string.unquoted.ini"
				}
			}
		},
		"string": {
			"begin": "(^[ \\t]+)?(?=[a-zA-Z])",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"match": "[a-zA-Z][ \\._a-zA-Z0-9]*",
					"name": "string.unquoted.ini"
				}
			]
		},
		"doublequoted-strings": {
			"name": "string.quoted.double.ini",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.ini",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"begin": "(^[ \\t]+)?(?=-?\\d)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"include": "#double"
				}
			]
		},
		"double": {
			"match": "-?\\d[(\\.\\d]*( \\d[(\\.\\d]*)?",
			"name": "constant.numeric.ini"
		},
		"boolean": {
			"match": "([Yy]es|[Nn]o|[Tt]rue|[Ff]alse)",
			"name": "constant.language.boolean.ini"
		},
		"inline-comment": {
			"begin": "(^[ \\t]+)?(?=;)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"begin": ";",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.ini"
						}
					},
					"end": "\\n",
					"name": "comment.line.ini"
				}
			]
		}
	},
	"scopeName": "source.ZH-HiLi"
}