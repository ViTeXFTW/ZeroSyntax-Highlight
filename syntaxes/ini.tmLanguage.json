{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Ini",
	"patterns": [
		{
			"include": "#Inline-Comment"
		},
		{
			"include": "#Object-Class"
		},
		{
			"match": "([Ee]nd|END)",
			"name": "invalid.illegal.ini"
		}
	],
	"repository": {
		"Object-Class": {
			"begin": "(^[ \\t]+)?(Object)[ \\t]+([a-zA-Z_][\\w%]*)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				},
				"3": {
					"name": "entity.name.type.class.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#Object-AddModule"
				},
				{
					"include": "#Object-RemoveModule"
				},
				{
					"include": "#Object-Modules"
				},
				{
					"include": "#Object-PropertyBlocks"	
				},
				{
					"include": "#Locomotor-Assignment"
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Object-AddModule": {
			"begin": "(^[ \\t]+)?([Aa]dd[Mm]odule)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#Object-Modules"
				},
				{
					"include": "#Object-PropertyBlocks"	
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Object-Modules": {
			"patterns": [
				{
					"include": "#Object-DrawModule"
				},
				{
					"include": "#Object-BodyModule"
				},
				{
					"include": "#Object-BehaviorModule"
				},
				{
					"include": "#Object-ClientUpdate"
				}
			]
		},
		"Object-PropertyBlocks": {
			"patterns": [
				{
					"include": "#Object-WeaponSet"
				},
				{
					"include": "#Object-ArmorSet"
				},
				{
					"include": "#Object-UnitSpecificSounds"
				},
				{
					"include": "#Object-Prerequisites"
				}
			]
		},
		"Object-Prerequisites": {
			"begin": "(^[ \\t]+)?\\b(Prerequisites|PREREQUISITES)\\b",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"	
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"	
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Object-UnitSpecificSounds": {
			"begin": "(^[ \\t]+)?\\b(UnitSpecificSounds|UNITSPECIFICSOUNDS)\\b",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Object-WeaponSet": {
			"begin": "(^[ \\t]+)?\\b(WeaponSet|WEAPONSET)\\b",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Object-ArmorSet": {
			"begin": "(^[ \\t]+)?\\b(ArmorSet|ARMORSET)\\b",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Object-RemoveModule": {
			"match": "(^[ \\t]+)?(RemoveModule)([ \\t]+)([a-zA-Z_][\\w]*)",
			"captures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				},
				"3": {
					"name": "punctuation.whitespace.ini"
				},
				"4": {
					"name": "storage.type.ini"
				}
			}
		},
		"Object-ClientUpdate": {
			"begin": "(^[ \\t]+)?\\b([Cc]lient[Uu]pdate|CLIENTUPDATE)\\b([ \\t]*)(=)([ \\t]*)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				},
				"3": {
					"name": "punctuation.whitespace.ini"
				},
				"4": {
					"name": "keyword.operator.assignment.ini"
				},
				"5": {
					"name": "punctuation.whitespace.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"begin": "(?<==[ \\t]*)([a-zA-Z_]\\w*)",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.ini"
						}
					},
					"end": "$",
					"patterns": [
						{
							"begin": "(?<==[ \\t]*[a-zA-Z]+[ \\t]+)([a-zA-Z_]\\w*)",
							"beginCaptures": {
								"1": {
									"name": "storage.type.ini"
								}
							},
							"end": "$",
							"patterns": [
								{
									"include": "#Inline-Comment"
								},
								{
									"match": "[^ \\t]+",
									"name": "invalid.illegal.moduletag.ini"
								}
							]
						},
						{
							"include": "#Inline-Comment"
						},
						{
							"match": "[^ \\t]+",
							"name": "invalid.illegal.moduletag.ini"
						}
					]
				},
				{
					"include": "#Inline-Comment"
				},
				{
					"match": "[^ \\t]+",
					"name": "invalid.illegal.moduletag.ini"
				}
			]
		},
		"Object-BehaviorModule": {
			"begin": "(^[ \\t]+)?\\b(Behavior|BEHAVIOR)\\b([ \\t]*)(=)([ \\t]*)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				},
				"3": {
					"name": "punctuation.whitespace.ini"
				},
				"4": {
					"name": "keyword.operator.assignment.ini"
				},
				"5": {
					"name": "punctuation.whitespace.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"begin": "(?<==[ \\t]*)([a-zA-Z_]\\w*)",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.ini"
						}
					},
					"end": "$",
					"patterns": [
						{
							"begin": "(?<==[ \\t]*[a-zA-Z]+[ \\t]+)([a-zA-Z_]\\w*)",
							"beginCaptures": {
								"1": {
									"name": "storage.type.ini"
								}
							},
							"end": "$",
							"patterns": [
								{
									"include": "#Inline-Comment"
								},
								{
									"match": "[^ \\t]+",
									"name": "invalid.illegal.moduletag.ini"
								}
							]
						},
						{
							"include": "#Inline-Comment"
						},
						{
							"match": "[^ \\t]+",
							"name": "invalid.illegal.moduletag.ini"
						}
					]
				},
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#Behavior-Turret"
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Behavior-Turret": {
			"begin": "(^[ \\t]+)?\\b([Tt]urret|TURRET|[Aa]lt[Tt]urret|ALTTURRET)\\b",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"	
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"	
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Object-BodyModule": {
			"begin": "(^[ \\t]+)?\\b(Body|BODY)\\b([ \\t]*)(=)([ \\t]*)([a-zA-Z]+)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				},
				"3": {
					"name": "punctuation.whitespace.ini"
				},
				"4": {
					"name": "keyword.operator.assignment.ini"
				},
				"5": {
					"name": "punctuation.whitespace.ini"
				},
				"6": {
					"name": "entity.name.function.ini"
				}	
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"begin": "(?<=\\b([a-zA-Z]*Body)[ \\t]*)([a-zA-Z_]\\w*)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.ini"
						},
						"2": {
							"name": "storage.type.ini"
						}
					},
					"end": "$",
					"patterns": [
						{
							"comment": "Makes sure nothing can be written after the module tag"
						},
						{
							"include": "#Inline-Comment"
						},
						{
							"match": "[^ \\t]+",
							"name": "invalid.illegal.moduletag.ini"
						}
					]
				},
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#General-Assignment"
				},
				{
					"include": "#Invalid-Assignment"
				}
			]
		},
		"Object-DrawModule": {
			"begin": "(^[ \\t]+)?\\b(Draw|DRAW)\\b([ \\t]*)(=)([ \\t]*)\\b(W|W3|W3D|W3D[a-zA-Z]*)\\b",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				},
				"3": {
					"name": "punctuation.whitespace.ini"
				},
				"4": {
					"name": "keyword.operator.assignment.ini"
				},
				"5": {
					"name": "punctuation.whitespace.ini"
				},
				"6": {
					"name": "entity.name.function.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"begin": "(?<=\\b(W3D\\w*)[ \\t]+)([a-zA-Z_]\\w*)",
					"comment": "Checks if the previous word was W3D...[ \\t] then the next will be captured as the module tag",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.ini"
						},
						"2": {
							"name": "storage.type.ini"
						}
					},
					"end": "$",
					"patterns": [
						{
							"comment": "Makes sure nothing can be written after the module tag"
						},
						{
							"include": "#Inline-Comment"
						},
						{
							"match": "[^ \\t]+",
							"name": "invalid.illegal.moduletag.ini"
						}
					]
				},
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#DrawModule-StateBlocks"
				},
				{
					"include": "#Invalid-Assignment"
				},
				{
					"include": "#General-Assignment"
				}
			]
		},
		"Module-ModuleTag": {
			"match": "[a-zA-Z]\\w*",
			"name": "storage.type.ini"
		},
		"DrawModule-StateBlocks": {
			"patterns": [
				{
					"include": "#DrawModule-TransitionState"
				},
				{
					"include": "#DrawModule-ConditionState"
				},
				{
					"include": "#DrawModule-DefaultConditionState"
				}
			]
		},
		"DrawModule-TransitionState": {
			"begin": "(^[ \\t]+)?\\b(Transition[Ss]tate|transitionstate)\\b([ \\t]+)(=)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				},
				"3": {
					"name": "punctuation.whitespace.ini"
				},
				"4": {
					"name": "keyword.operator.assignment.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"begin": "(?<=(\\b(Transition[Ss]tate|transitionstate)\\b)[ \\t]+(=)[ \\t]+)",
					"end": "$",
					"patterns": [
						{
							"include": "#Inline-Comment"
						},
						{
							"match": "[a-zA-Z_\\d]+",
							"name": "variable.other.constant.ini"
						},
						{
							"match": "[^ \\t]+",
							"name": "invalid.illegal.transitionstate.ini"
						}
					]
				}, 
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#Invalid-Assignment"
				},
				{
					"include": "#General-Assignment"
				}
			]
		},
		"DrawModule-ConditionState": {
			"begin": "(^[ \\t]+)?\\b(Condition[Ss]tate|conditionstate)\\b([ \\t]+)(=)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				},
				"3": {
					"name": "punctuation.whitespace.ini"
				},
				"4": {
					"name": "keyword.operator.assignment.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"begin": "(?<=(\\b(Condition[Ss]tate|conditionstate)\\b)[ \\t]+(=)[ \\t]+)",
					"end": "$",
					"patterns": [
						{
							"include": "#Inline-Comment"
						},
						{
							"match": "[a-zA-Z_\\d]+",
							"name": "variable.other.constant.ini"
						},
						{
							"match": "[^ \\t]+",
							"name": "invalid.illegal.conditionstate.ini"
						}
					]
				}, 
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#Invalid-Assignment"
				},
				{
					"include": "#General-Assignment"
				}
			]
		},
		"DrawModule-DefaultConditionState": {
			"begin": "(^[ \\t]+)?\\b(DefaultConditionState|defaultconditionstate)\\b",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"end": "(^[ \\t]+)?([Ee]nd|END)",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "keyword.control.ini"
				}
			},
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#Invalid-Assignment"
				},
				{
					"include": "#General-Assignment"
				}
			]
		},
		"Invalid-Assignment": {
			"match": "(^[ \\t]+)?([^a-zA-Z_]\\w*)",
			"captures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "invalid.illegal.assignment.ini"
				}
			}
		},
		"Locomotor-Assignment": {
			"begin": "(^[ \\t]+)?\\b([Ll]ocomotor)\\b([ \\t]+)(=)([ \\t]+)([A-Z_]+)",
			"captures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "variable.name.ini"
				},
				"3": {
					"name": "punctuation.whitespace.ini"	
				},
				"4": {
					"name": "keyword.operator.assignment.ini"
				},
				"5": {
					"name": "punctuation.whitespace.ini"
				},
				"6": {
					"name": "variable.other.constant.ini"
				}
			},
			"end": "$",
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"include": "#Inline-Comment"
				},
				{
					"match": "[^a-zA-Z_]\\w*",
					"name": "invalid.illegal.locomotortype.ini"
				},
				{
					"include": "#String"
				}
			]
		},
		"General-Assignment": {
			"begin": "(^[ \\t]+)?([a-zA-Z_][\\w%]*)",
			"captures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				},
				"2": {
					"name": "variable.name.ini"
				}
			},
			"end": "$",
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"include": "#Equals"
				},
				{
					"include": "#WeaponSlot-Keywords"
				},
				{
					"include": "#Value"
				}
			]
		},
		"WeaponSlot-Keywords": {
			"patterns": [
				{
					"match": "\\b(PRIMARY|SECONDARY|TERTIARY)\\b\\s*[!%#]",
					"name": "invalid.illegal.assignment-keywords.ini"
				},
				{
					"match": "\\b(PRIMARY|SECONDARY|TERTIARY)\\b",
					"name": "variable.other.constant.ini"
				}
			]
		},
		"Value": {
			"patterns": [
				{
					"include": "#Inline-Comment"
				},
				{
					"include": "#Invalid-Value"
				},
				{
					"include": "#Number"
				},
				{
					"include": "#Boolean"
				},
				{
					"include": "#String"
				}
			]
		},
		"Invalid-Value": {
			"match": "[^a-zA-Z_\\d\\-\"'\\.:+].*",
			"name": "invalid.illegal.value.ini"
		},
		"WhiteSpace": {
			"match": "[ \\t]+",
			"name": "punctuation.whitespace.ini"
		},
		"Equals": {
			"match": "=",
			"name": "keyword.operator.assignment.ini"
		},
		"String": {
			"patterns": [
				{
					"match": "\".*?\"",
					"name": "string.quoted.double.ini"
				},
				{
					"match": "'.*?'",
					"name": "string.quoted.single.ini"
				},
				{
					"match": "[a-zA-Z_:\\.+]\\w*",
					"name": "string.unquoted.ini"
				}
			]
		},
		"Number": {
			"patterns": [
				{
					"match": "-?\\d*\\.\\d+%",
					"name": "invalid.illegal.precentage.ini"
				},
				{
					"match": "-?\\d+(\\.\\d+)?[%fF]?",
					"name": "constant.numeric.ini"
				},
				{
					"match": "-?\\.\\d+[fF]?",
					"name": "constant.numeric.ini"
				}
			]	
		},
		"Boolean": {
			"patterns": [
				{
					"include": "#WhiteSpace"
				},
				{
					"match": "\\b([Tt]rue|TRUE|[Yy]es|YES)\\b",
					"name": "constant.language.boolean.true.ini"
				},
				{
					"match": "\\b([Ff]alse|FALSE|[Nn]o|NO)\\b",
					"name": "constant.language.boolean.false.ini"
				}
			]
		},
		"Inline-Comment": {
			"begin": "(^[ \\t]+)?(?=(;|//))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.ini"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"begin": ";",
					"beginCaptures": {
						"0": {
							"name": "comment.line.semicolon.ini"
						}
					},
					"end": "\\n",
					"name": "comment.line.ini"
				},
				{
					"begin": "//",
					"beginCaptures": {
						"0": {
							"name": "comment.line.double-slash.ini"
						}
					},
					"end": "\\n",
					"name": "comment.line.ini"
				}
			]
		}
	},
	"scopeName": "source.ZH-HiLi"
}